name: Misc

on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - unlabeled
  workflow_dispatch:

concurrency:
  group: misc-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  SHARG_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eeuxo pipefail {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'lint'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Snippet gcc13"
            compiler: "gcc-13"
            cxx_flags: "-std=c++23"
            build_type: Release
            build: snippet

          - name: "Performance gcc13"
            compiler: "gcc-13"
            cxx_flags: "-std=c++23"
            build_type: Release
            build: performance

          - name: "Header gcc13"
            compiler: "gcc-13"
            cxx_flags: "-std=c++23"
            build_type: Release
            build: header

          - name: "Header gcc11"
            compiler: "gcc-11"
            cxx_flags: "-std=c++23"
            build_type: Release
            build: header

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: raptor
          fetch-depth: 2
          submodules: true

      - name: Setup toolchain
        uses: seqan/actions/setup-toolchain@main
        with:
          compiler: ${{ matrix.compiler }}
          ccache_size: 150M

      - name: Install CMake
        uses: seqan/actions/setup-cmake@main
        with:
          cmake: 3.18.4

      - name: Configure tests
        run: |
          mkdir build
          cd build
          cmake ../raptor/test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                                                   -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }} -Wno-interference-size" \
                                                   -DRAPTOR_NATIVE_BUILD=OFF
          case "${{ matrix.build }}" in
            snippet) make -j${{ matrix.build_threads }} gtest_build;;
            performance) make -j${{ matrix.build_threads }} gbenchmark_build;;
            header) make -j${{ matrix.build_threads }} gtest_build gbenchmark_build;;
          esac

      - name: Build tests
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: 2
        run: |
          ccache -z
          cd build
          make -k -j2
          ccache -sv

      - name: Run tests
        run: |
          cd build
          ctest . -j2 --output-on-failure
